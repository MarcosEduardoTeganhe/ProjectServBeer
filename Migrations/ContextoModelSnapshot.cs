// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectServBeer.Models;

namespace ProjectServBeer.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome_cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefone")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Fornecedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Funcionario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.ItensServicos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("produtoid")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<int?>("servicoid")
                        .HasColumnType("int");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("produtoid");

                    b.HasIndex("servicoid");

                    b.ToTable("ItensVendas");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Pagamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fornecedorid")
                        .HasColumnType("int");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("fornecedorid");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("fornecedorid")
                        .HasColumnType("int");

                    b.Property<int>("nome_prod")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<int?>("tipo_prodid")
                        .HasColumnType("int");

                    b.Property<int>("valor_prod")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("fornecedorid");

                    b.HasIndex("tipo_prodid");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Recebimento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("data_recebimento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("servicoid")
                        .HasColumnType("int");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("servicoid");

                    b.ToTable("Recebimentos");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Servico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("clienteid")
                        .HasColumnType("int");

                    b.Property<int?>("funcionarioid")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.Property<float>("valor_promocao")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.HasIndex("funcionarioid");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.ItensServicos", b =>
                {
                    b.HasOne("ProjectServBeer.Models.Dominio.Produto", "produto")
                        .WithMany("produtos")
                        .HasForeignKey("produtoid");

                    b.HasOne("ProjectServBeer.Models.Dominio.Servico", "servico")
                        .WithMany()
                        .HasForeignKey("servicoid");

                    b.Navigation("produto");

                    b.Navigation("servico");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Pagamento", b =>
                {
                    b.HasOne("ProjectServBeer.Models.Dominio.Fornecedor", "fornecedor")
                        .WithMany("fornecedores")
                        .HasForeignKey("fornecedorid");

                    b.Navigation("fornecedor");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Produto", b =>
                {
                    b.HasOne("ProjectServBeer.Models.Dominio.Fornecedor", "fornecedor")
                        .WithMany("fornecedor")
                        .HasForeignKey("fornecedorid");

                    b.HasOne("ProjectServBeer.Models.Dominio.Categoria", "tipo_prod")
                        .WithMany("categorias")
                        .HasForeignKey("tipo_prodid");

                    b.Navigation("fornecedor");

                    b.Navigation("tipo_prod");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Recebimento", b =>
                {
                    b.HasOne("ProjectServBeer.Models.Dominio.Servico", "servico")
                        .WithMany("servicos")
                        .HasForeignKey("servicoid");

                    b.Navigation("servico");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Servico", b =>
                {
                    b.HasOne("ProjectServBeer.Models.Dominio.Cliente", "cliente")
                        .WithMany("clientes")
                        .HasForeignKey("clienteid");

                    b.HasOne("ProjectServBeer.Models.Dominio.Funcionario", "funcionario")
                        .WithMany("funcionarios")
                        .HasForeignKey("funcionarioid");

                    b.Navigation("cliente");

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Categoria", b =>
                {
                    b.Navigation("categorias");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Cliente", b =>
                {
                    b.Navigation("clientes");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Fornecedor", b =>
                {
                    b.Navigation("fornecedor");

                    b.Navigation("fornecedores");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Funcionario", b =>
                {
                    b.Navigation("funcionarios");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Produto", b =>
                {
                    b.Navigation("produtos");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Servico", b =>
                {
                    b.Navigation("servicos");
                });
#pragma warning restore 612, 618
        }
    }
}
