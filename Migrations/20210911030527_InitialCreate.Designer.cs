// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectServBeer.Models;

namespace ProjectServBeer.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210911030527_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("nome_cliente")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id");

                    b.HasIndex("cpf")
                        .IsUnique();

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Fornecedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("email")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("empresa")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Funcionario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.ItensServicos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("produtoID")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("Int");

                    b.Property<int>("servicoID")
                        .HasColumnType("int");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("produtoID");

                    b.HasIndex("servicoID");

                    b.ToTable("ItemServicos");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Pagamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dataEmissao")
                        .HasColumnType("Date");

                    b.Property<DateTime>("dataVencimento")
                        .HasColumnType("Date");

                    b.Property<int>("fornecedorID")
                        .HasColumnType("int");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("fornecedorID");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("categoriaID")
                        .HasColumnType("int");

                    b.Property<int>("fornecedorID")
                        .HasColumnType("int");

                    b.Property<int>("nome_prod")
                        .HasMaxLength(35)
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("Int");

                    b.Property<double>("valor_prod")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("categoriaID");

                    b.HasIndex("fornecedorID");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Recebimento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("data_recebimento")
                        .HasColumnType("Date");

                    b.Property<int>("servicoID")
                        .HasColumnType("int");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("servicoID");

                    b.ToTable("Recebimento");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Servico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("clienteID")
                        .HasColumnType("int");

                    b.Property<int>("funcionarioID")
                        .HasColumnType("int");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.Property<double>("valor_promocao")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("clienteID");

                    b.HasIndex("funcionarioID");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.ItensServicos", b =>
                {
                    b.HasOne("ProjectServBeer.Models.Dominio.Produto", "produto")
                        .WithMany("produtos")
                        .HasForeignKey("produtoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProjectServBeer.Models.Dominio.Servico", "servico")
                        .WithMany("itensservicos")
                        .HasForeignKey("servicoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("produto");

                    b.Navigation("servico");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Pagamento", b =>
                {
                    b.HasOne("ProjectServBeer.Models.Dominio.Fornecedor", "fornecedor")
                        .WithMany("fornecedores")
                        .HasForeignKey("fornecedorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("fornecedor");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Produto", b =>
                {
                    b.HasOne("ProjectServBeer.Models.Dominio.Categoria", "tipo_prod")
                        .WithMany("categorias")
                        .HasForeignKey("categoriaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProjectServBeer.Models.Dominio.Fornecedor", "fornecedor")
                        .WithMany("fornecedor")
                        .HasForeignKey("fornecedorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("fornecedor");

                    b.Navigation("tipo_prod");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Recebimento", b =>
                {
                    b.HasOne("ProjectServBeer.Models.Dominio.Servico", "servico")
                        .WithMany("servicorecebido")
                        .HasForeignKey("servicoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("servico");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Servico", b =>
                {
                    b.HasOne("ProjectServBeer.Models.Dominio.Cliente", "cliente")
                        .WithMany("clientes")
                        .HasForeignKey("clienteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProjectServBeer.Models.Dominio.Funcionario", "funcionario")
                        .WithMany("funcionarios")
                        .HasForeignKey("funcionarioID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Categoria", b =>
                {
                    b.Navigation("categorias");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Cliente", b =>
                {
                    b.Navigation("clientes");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Fornecedor", b =>
                {
                    b.Navigation("fornecedor");

                    b.Navigation("fornecedores");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Funcionario", b =>
                {
                    b.Navigation("funcionarios");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Produto", b =>
                {
                    b.Navigation("produtos");
                });

            modelBuilder.Entity("ProjectServBeer.Models.Dominio.Servico", b =>
                {
                    b.Navigation("itensservicos");

                    b.Navigation("servicorecebido");
                });
#pragma warning restore 612, 618
        }
    }
}
